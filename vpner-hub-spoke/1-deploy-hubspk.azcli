# Pre-Requisites

#Parameters
region=southcentralus
rg=lab-hs-vpner
username=azureuser
password="Msft123Msft123" #Please change your password
vmsize=Standard_DS1_v2 #VM Size
mypip=$(curl -4 ifconfig.io -s) #Replace with your home Public IP in case you run this over Cloudshell

az group create --name $rg --location $region
az deployment group create --name Hub1-$region --resource-group $rg \
--template-uri https://raw.githubusercontent.com/dmauser/azure-hub-spoke-base-lab/main/azuredeployv4.json \
--parameters https://raw.githubusercontent.com/dmauser/azure-hub-spoke/main/vpner-hub-spoke/parameters.json \
--parameters VmAdminUsername=$username VmAdminPassword=$password restrict_SSH_VM_AccessByPublicIP=$mypipi \
--no-wait


# Create VPN Gateway:
vnet=Az-Hub1-vnet
gwname=Az-Hub1-vpngw
gwsize=VpnGw1AZ
asn=65515

#AZ VPN GW Public IP STD:
az network public-ip create --name $gwname-pip1 --resource-group $rg --sku Standard --zone 1 2 3 -o none
az network public-ip create --name $gwname-pip2 --resource-group $rg --sku Standard --zone 1 2 3 -o none

az network vnet-gateway create --name $gwname --public-ip-address $gwname-pip1 $gwname-pip2 \
--resource-group $rg \
--vnet $vnet \
--gateway-type Vpn \
--vpn-type RouteBased \
--sku $gwsize \
--asn $asn \
--no-wait

# Loop script to check for completion of VPN GW creation:
while true
do
  echo "Checking for VPN GW creation status..."
  status=$(az network vnet-gateway show --name $gwname --resource-group $rg --query provisioningState -o tsv)
  if [ "$status" = "Succeeded" ]; then
    echo "VPN GW creation completed!"
    break
  fi
  sleep 10
done

# Enable Gateway Private IPs
az network vnet-gateway update --name $gwname --resource-group $rg --set "enablePrivateIpAddress=true" --no-wait --output none
az network vnet-gateway update --name $AzurevpngwName-vpngw --resource-group $rg --set bgpSettings.bgpPeeringAddresses[0].customBgpIpAddresses=[\"169.254.21.1\"] --no-wait
az network vnet-gateway update --name $AzurevpngwName-vpngw --resource-group $rg --set bgpSettings.bgpPeeringAddresses[1].customBgpIpAddresses=[\"169.254.21.2\"] --no-wait


